// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoAPI.Persistence.Context;

#nullable disable

namespace ToDoAPI.Persistence.Migrations
{
    [DbContext(typeof(ToDoAPIDbContext))]
    [Migration("20230219150642_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoAPI.Persistence.Models.Status", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusDefinition")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedAt = new DateTime(2023, 2, 19, 19, 6, 42, 553, DateTimeKind.Local).AddTicks(2896),
                            ModifiedAt = new DateTime(2023, 2, 19, 19, 6, 42, 553, DateTimeKind.Local).AddTicks(2904),
                            StatusDefinition = "Active"
                        },
                        new
                        {
                            ID = 2,
                            CreatedAt = new DateTime(2023, 2, 19, 19, 6, 42, 553, DateTimeKind.Local).AddTicks(2909),
                            ModifiedAt = new DateTime(2023, 2, 19, 19, 6, 42, 553, DateTimeKind.Local).AddTicks(2910),
                            StatusDefinition = "Done"
                        },
                        new
                        {
                            ID = 3,
                            CreatedAt = new DateTime(2023, 2, 19, 19, 6, 42, 553, DateTimeKind.Local).AddTicks(2911),
                            ModifiedAt = new DateTime(2023, 2, 19, 19, 6, 42, 553, DateTimeKind.Local).AddTicks(2912),
                            StatusDefinition = "Deleted"
                        });
                });

            modelBuilder.Entity("ToDoAPI.Persistence.Models.SubTask", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubTaskID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ToDoItemID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ToDoItemID");

                    b.ToTable("SubTasks");
                });

            modelBuilder.Entity("ToDoAPI.Persistence.Models.ToDo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ToDoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OwnerID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("OwnerID");

                    b.ToTable("ToDoTable");
                });

            modelBuilder.Entity("ToDoAPI.Persistence.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ToDoAPI.Persistence.Models.SubTask", b =>
                {
                    b.HasOne("ToDoAPI.Persistence.Models.ToDo", "SubTaskOwnerToDo")
                        .WithMany("SubTasks")
                        .HasForeignKey("ToDoItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubTaskOwnerToDo");
                });

            modelBuilder.Entity("ToDoAPI.Persistence.Models.ToDo", b =>
                {
                    b.HasOne("ToDoAPI.Persistence.Models.User", "Owner")
                        .WithMany("ToDoTasks")
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ToDoAPI.Persistence.Models.ToDo", b =>
                {
                    b.Navigation("SubTasks");
                });

            modelBuilder.Entity("ToDoAPI.Persistence.Models.User", b =>
                {
                    b.Navigation("ToDoTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
